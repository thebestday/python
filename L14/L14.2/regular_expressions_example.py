import re

text = "100 ИНФ 8(903)6174741 Информатика abc@mail +7(903)6174731 213 МАТ abc@.mail.ru 1.1.91 1\\12\\1991 89036174739 1.1.1991 Математика 1.11.1991 +79036174740  1/12/1991 cnn@gmail.com 21.01.1991 156 АНГ  Английский 89036174738 nn@gmail.com"
# Шаблон для даты
# Это одна или две цифры потом точка потом слеш\ потом снова одни цифра или две потом либо две либо 4
pattern = r'\d{1,2}[./]\d{1,2}[./]\d{2,4}'
print(re.findall(pattern, text))

# берем дату с 2 обратными слешами
pattern = r'\d{1,2}[./\\]\d{1,2}[./\\]\d{2,4}'
print(re.findall(pattern, text))               # '1\\12\\1991'





# Шаблон для номеров телефонов
# Создадим сначала шаблон из 11 чисел
pattern = r'\d{11}'
print(re.findall(pattern, text))  # видим что не все ловяться(с плюсом, со скобочками)
# попробуем усложнить шаблон - поймать все номера с +7  указываем любой непробельный символ спереди \S{1.2}
pattern = r'\S{1,2}\d{10}'
print(re.findall(pattern, text))   # поймали +7  - но пока не поймали номера со скобками
# берем со скобочками ? - символ может быть или не быть ; d{3}- ЦИФРЫ В СКОБОЧКАХ ; \S -это непробельный символ
pattern = r'\S{1,2}\S?\d{3}\S?\d{7}'
print(re.findall(pattern, text))    # взяли все


# Шаблон для email
# + значит в любом количестве
pattern = r'\S+[@]\S+'
print(re.findall(pattern, text)) # но не все что взяли является e-mail
# . это произовльный символ
pattern = r'\S+[@][a-z]\S+[.]\S+'
print(re.findall(pattern, text)) # вроде все взяли

print('--------------------------------------')
# ФИЛЬТРАЦИЯ ДАННЫХ отфильтруем и оставим только телефонные номера
pattern = r'\S{1,2}\S?\d{3}\S?\d{7}'
telephone_numbers = ['8(903)6174741','+7(903)6174731','cnn@gmail.com','89036174739','+79036174740','89036174738', '+7903617473745','asd@mail.ru']
for num in telephone_numbers:
    print(num, re.match(pattern, num))         # match это подстрока которая совпадает