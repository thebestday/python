# Тип данных строка (str)
# Инициализация
#temp_str = ''
str = 'Марка авто \'Volvo\''
print(str)
# Обращение к символам, подстрокам
# ВЫВОД СТРОКИ ПОСИМВОЛЬНО
for i in range(len(str)):
    print(str[i])

# срезы
print(str[1:4])
# Срез с обратной нумерацией
print(str[1: -3])
# Функция со строками
print(str, len(str))
# Операции со строками
str_2 = 'Mercedes'
# Операция сложения строк  выглдядит как конкатенация строк
print(str + str_2)
# Умножение строк  * строка два раза подряд

print(str_2*2)
# Форматирование строк
# Т.к. строка это неизменяемый тип данных, поэтому чтобы в строке что- то поменять
#неоходимо создавать фактически новую строку
# но форматирование это эффективное создание новой строки

brend = 'Volvo'
price = 1.5
# указали две переменных в которые будем втавлять
car = 'Марка: {} цена: {}'.format(brend, price)
print(car)

# Python3 появился более удобные способ форматирования
# через декаратор f
car = f'Марка: {brend} цена: {price}'
print(car)
# Форматирование строк бодее эффективный способ чем их сложение

# Методы
# Метод разбиения строки на подстроки - метод split()
# если не указывать знак разбиения то разобъет все по пробелам - каждое слово отдельно
# если нет пробелов - то методо не сработает#
# раздилитель должен быть что бы сработал этот метод(слеши, запятые, и т.д)
cars = 'Volvo, Audi, lada'
print(cars.split('*'))

# Методы форматирования строк
# upper() lower()
print(car.upper())
print(car.title()) # Первый символ будет большим
print(car.lower())

# Замена подстроки в строке
# метод replace
email_adress = 'eMail: _mail_'
email = 'my_email@gmail.com'
print(email_adress.replace('_mail_', email))